#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"

        parentheses: parentheses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_9) &kp LS(N0) &kp LEFT>;
            label = "PARENTHESES";
        };

        ru_dot: ru_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N7) &kp SPACE>;
            label = "RU_DOT";
        };

        ru_comma: ru_comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_6) &kp SPACE>;
            label = "RU_COMMA";
        };

        wrap_dash: wrap_dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp LA(MINUS) &kp SPACE>;
            label = "WRAP_DASH";
        };

        delete_line: delete_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT) &kp LG(BACKSPACE) &kp DEL>;
            label = "DELETE_LINE";
        };

        vim_o: vim_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT) &kp ENTER &to 1>;
            label = "VIM_O";
        };

        bash: bash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(B)))>;
            label = "BASH";
        };

        helloworld: helloworld {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bash &kp E &kp C &kp H &kp O &kp SPACE &kp SQT &kp H &kp S &kp DOT &kp A &kp L &kp E &kp R &kp T &kp DOT &kp S &kp H &kp O &kp W &kp LPAR &kp DQT &kp LS(H) &kp E &kp L &kp L &kp O &kp DQT &kp RPAR &kp SQT &kp SPACE &kp PIPE &kp SPACE &kp H &kp S>;
            label = "HELLOWORLD";
        };

        to_bear: to_bear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &tog 1>;
            label = "TO_BEAR";
        };

        from_bear: from_bear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &tog 1>;
            label = "FROM_BEAR";
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        w_or_word_forward: w_or_word_forward {
            compatible = "zmk,behavior-tap-dance";
            label = "W_OR_WORD_FORWARD";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LA(RIGHT)>;
        };

        b_or_word_back: b_or_word_back {
            compatible = "zmk,behavior-tap-dance";
            label = "B_OR_WORD_BACK";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp LA(LEFT_ARROW)>;
        };

        right_or_forward: right_or_forward {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_OR_FORWARD";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp LA(RIGHT)>;
        };

        left_or_backward: left_or_backward {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_OR_BACKWARD";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp LA(LEFT_ARROW)>;
        };

        dd: dd {
            compatible = "zmk,behavior-tap-dance";
            label = "DD";
            #binding-cells = <0>;
            bindings = <&none>, <&delete_line>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4            &kp N5  &mo 5                                                    &tog 4         &kp N6  &kp N7    &kp N8     &kp N9   &kp N0     &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R             &kp T   &kp CAPS                                                 &kp LA(SPACE)  &kp Y   &kp U     &kp I      &kp O    &kp P      &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F             &kp G   &to_bear  &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &tog 6         &kp H   &kp J     &kp K      &kp L    &kp SEMI   &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V             &kp B                        &kp HOME      &kp PG_UP                            &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp RSHFT
&mo 4      &kp GRAVE  &kp LBKT  &kp RBKT  &kp LEFT_COMMAND          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE              &kp LEFT  &kp DOWN   &kp UP   &kp RIGHT  &mo 4
            >;
        };

        bear_insert_mode {
            bindings = <
&kp EQUAL       &kp N1      &kp N2      &kp N3      &kp  N4           &kp N5      &mo 5                                                                               &tog 4             &ru_comma  &ru_dot            &kp LS(N8)  &parentheses  &kp N0             &mt LA(MINUS) MINUS
&kp TAB         &kp Q       &kp W       &kp E       &kp R             &kp T       &kp CAPS                                                                            &kp LC(LG(SPACE))  &kp Y      &kp U              &kp I       &kp O         &kp P              &kp BSLH
&trans          &kp A       &kp S       &kp D       &kp F             &kp G       &from_bear                   &kp LCTRL        &kp LALT      &kp LGUI   &kp RCTRL    &delete_line       &kp H      &kp J              &kp K       &kp L         &kp SEMI           &kp SQT
&sk LEFT_SHIFT  &kp Z       &kp X       &kp C       &kp V             &kp B                                                     &kp HOME      &kp PG_UP                                  &kp N      &kp M              &kp COMMA   &kp DOT       &kp FSLH           &sk RIGHT_SHIFT
&mo 4           &kp GRAVE   &kp LBKT    &kp RBKT    &kp LEFT_COMMAND              &mt LA(BACKSPACE) BACKSPACE  &mt LA(DEL) DEL  &kp END       &kp PG_DN  &lt 0 ENTER  &kp SPACE                     &left_or_backward  &kp DOWN    &kp UP        &right_or_forward  &mo 4
            >;
        };

        bear_normal_mode {
            bindings = <
&trans  &trans  &trans     &trans  &trans     &trans  &trans                                      &trans  &trans             &trans             &trans         &trans               &trans  &trans
&trans  &trans  &trans     &trans  &kp LG(V)  &trans  &trans                                      &trans  &trans             &to 1              &kp LG(Z)      &kp LG(C)            &trans  &trans
&trans  &trans  &trans     &trans  &trans     &dd     &trans  &trans  &trans      &trans  &trans  &trans  &mt LA(LEFT) LEFT  &mt LA(DOWN) DOWN  &mt LA(UP) UP  &mt LA(RIGHT) RIGHT  &vim_o  &trans
&trans  &trans  &kp LG(X)  &trans  &trans     &trans                  &trans      &trans                  &trans             &trans             &trans         &trans               &trans  &trans
&trans  &trans  &trans     &trans  &trans             &trans  &trans  &trans      &trans  &trans  &trans                     &trans             &trans         &trans               &trans  &trans
            >;
        };

        keypad {
            bindings = <
&kp C_BRI_DEC  &kp C_BRI_UP  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                                   &trans     &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&kp TAB        &kp Q         &kp W   &kp E   &kp R   &kp T   &none                                                    &none      &kp KP_NUM    &kp KP_N7         &kp KP_N8   &kp KP_N9   &kp KP_MINUS       &kp KP_SLASH
&kp ESC        &kp A         &kp S   &kp D   &kp F   &kp G   &trans    &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp KP_EQUAL  &kp KP_N4         &kp KP_N5   &kp KP_N6   &kp KP_PLUS        &kp SQT
&kp LSHFT      &kp Z         &kp X   &kp C   &kp V   &kp B                        &kp HOME      &kp PG_UP                        &kp KP_DOT    &kp KP_N1         &kp KP_N2   &kp KP_N3   &kp KP_ENTER       &kp RSHFT
&mo 4          &kp GRAVE     &trans  &trans  &trans          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0                &kp LEFT          &kp DOWN    &kp UP      &kp RIGHT          &mo 4
            >;
        };

        fn {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &trans                                      &trans  &kp F7    &kp F8    &kp F9   &kp F10    &kp F11  &kp F12
&kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F17  &none                                       &none   &kp F18   &kp F19   &kp F20  &kp F21    &kp F22  &kp F23
&trans   &trans   &trans   &trans   &trans   &trans   &none   &trans  &trans      &trans  &trans  &none   &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans                   &trans      &trans                  &trans    &trans    &trans   &trans     &trans   &trans
&trans   &trans   &trans   &trans   &trans            &trans  &trans  &trans      &trans  &trans  &trans            &trans    &trans   &trans     &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                                                 &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        zeus {
            bindings = <
&bash   &trans  &trans  &trans  &trans  &helloworld  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans      &trans  &trans  &tog 6  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans               &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
